[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "So what’s this all about then?",
    "section": "",
    "text": "I decided to give the 30 Day Map Challenge a go as a learning exercise. My efforts are certainly not an exercise in flashy or impressive cartographic design.\nI’ve been teaching with tmap for a few years. Version 4.0 is in the offing and introduces some major changes, which at first glance make it trickier to teach, and closer in many ways to ggplot2, which I have often considered instead.\nSo… I thought I’d try to make a bunch of maps using both platforms to get a feel for the pros and cons of each.\n\n\n\n\n\n\n\n\n\n\n\n\n01 Points\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n02 Lines\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n03 Polygons\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n04 Bad Map\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n06 Asia\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n07 Navigation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n08 Africa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n09 Hexagons\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10 North America\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n12 South America\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n13 Choropleth\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n14 Europe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n14 Oceania\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n22 North is Not Up\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n25 Antarctica\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "maps/22-north-not-up.html",
    "href": "maps/22-north-not-up.html",
    "title": "22 North is Not Up",
    "section": "",
    "text": "↑"
  },
  {
    "objectID": "maps/22-north-not-up.html#libraries",
    "href": "maps/22-north-not-up.html#libraries",
    "title": "22 North is Not Up",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)\n\nsource(\"~/Documents/code/30-day-maps-2023/maps/utils.R\")"
  },
  {
    "objectID": "maps/22-north-not-up.html#data-wrangling",
    "href": "maps/22-north-not-up.html#data-wrangling",
    "title": "22 North is Not Up",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nfocus &lt;- \"Antarctica\"\nlon0 &lt;- 0\nlat0 &lt;- -90\nproj &lt;- str_glue(\"+proj=ortho lon_0={lon0} lat_0={lat0}\")\n\n\n\n\nCode\nworld &lt;- st_read(\"data/world.gpkg\") %&gt;%\n  st_make_valid() %&gt;%\n  select(CONTINENT) %&gt;%\n  st_transform(proj) %&gt;%\n  st_make_valid() %&gt;%\n  filter(!st_is_empty(.)) %&gt;%\n  group_by(CONTINENT) %&gt;%\n  summarise() \n\ncontinent &lt;- world %&gt;%\n  filter(CONTINENT == focus)\n\ngraticule &lt;- get_graticule(spacing = 15)"
  },
  {
    "objectID": "maps/22-north-not-up.html#tmap",
    "href": "maps/22-north-not-up.html#tmap",
    "title": "22 North is Not Up",
    "section": "tmap",
    "text": "tmap\n\ntm_shape(world) +\n  tm_fill() + \n  tm_shape(graticule) +\n  tm_lines(col = \"lightgrey\", lwd = 0.5) +\n  tm_compass(cardinal.directions = c(\"UP\", \"S\", \"E\", \"W\")) +\n  tm_layout(frame = FALSE)"
  },
  {
    "objectID": "maps/22-north-not-up.html#ggplot2",
    "href": "maps/22-north-not-up.html#ggplot2",
    "title": "22 North is Not Up",
    "section": "ggplot2",
    "text": "ggplot2\nWe need ggspatial for a north arrow here.\nBut even then, to customize it I have to make my own function.\n\n\nCode\nup_arrow &lt;- function(label = \"UP\") {\n  text_label = label\n  text_adj = c(0.5, 0.5)\n\n  grid::gList(\n    grid::polygonGrob(\n      x = c(0.625, 0.5, 0.5),\n      y = c(0.3, 0.85, 0.4),\n      default.units = \"npc\",\n      gp = grid::gpar(\n        lwd = 1,\n        col = \"black\",\n        fill = \"black\"\n      )\n    ),\n    grid::polygonGrob(\n      x = c(0.375, 0.5, 0.5),\n      y = c(0.3, 0.85, 0.4),\n      default.units = \"npc\",\n      gp = grid::gpar(\n        lwd = 0.5,\n        col = \"black\",\n        fill = NULL\n      )\n    ),\n    grid::textGrob(\n      label = text_label,\n      x = 0.5,\n      y = 1,\n      hjust = 0.5,\n      vjust = 0.5,\n      rot = 0,\n      gp = grid::gpar(fontsize = 9)\n    )\n  )\n}\n\n\nOn the other hand, since I’ve done the work, I might as well make the most of it.\n\nlibrary(ggspatial)\n\nggplot(world) +\n  geom_sf(linewidth = 0) +\n  geom_sf(data = graticule, col = \"lightgrey\", linewidth = 0.25) +\n  annotation_north_arrow(location = \"br\", style = up_arrow) + \n  annotation_north_arrow(location = \"tr\", style = up_arrow(\"LEFT\"), rotation = 90) + \n  annotation_north_arrow(location = \"tl\", style = up_arrow(\"DOWN\"), rotation = 180) + \n  annotation_north_arrow(location = \"bl\", style = up_arrow(\"RIGHT\"), rotation = 270) + \n  theme_void()"
  },
  {
    "objectID": "maps/07-navigation.html",
    "href": "maps/07-navigation.html",
    "title": "07 Navigation",
    "section": "",
    "text": "A map that helps you to navigate."
  },
  {
    "objectID": "maps/07-navigation.html#libraries",
    "href": "maps/07-navigation.html#libraries",
    "title": "07 Navigation",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(geosphere)\nlibrary(ggplot2)\nlibrary(stringr)\n\nsource(\"~/Documents/code/30-day-maps-2023/maps/utils.R\")"
  },
  {
    "objectID": "maps/07-navigation.html#data-wrangling",
    "href": "maps/07-navigation.html#data-wrangling",
    "title": "07 Navigation",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nstart_lat &lt;- -41.3\nstart_lon &lt;- 174.75\nend_lat &lt;- 45\northo_proj &lt;- str_glue(\"+proj=ortho +lat_0={start_lat} +lon_0={174.75}\")\nbearing &lt;- -88.5\nstep_length &lt;- 5e4\nlast_pt &lt;- c(start_lon, start_lat)\nlox &lt;- list()\ntransect &lt;- last_pt\ni &lt;- 1\nwhile (last_pt[2] &lt; end_lat) {\n  next_pt &lt;- destPointRhumb(last_pt, bearing, step_length)\n  if (next_pt[1] &gt; last_pt[1]) {\n    lox[[i]] &lt;- transect\n    i &lt;- i + 1\n    transect &lt;- c(next_pt)\n  } else {\n    transect &lt;- c(transect, next_pt)\n  }\n  last_pt &lt;- next_pt\n}\nlox[[i]] &lt;- transect\n\nlox_sf &lt;- lox %&gt;%\n  lapply(unlist) %&gt;%\n  lapply(matrix, ncol = 2, byrow = TRUE) %&gt;%\n  st_multilinestring() %&gt;%\n  st_sfc() %&gt;%\n  st_sf(crs = 4326) %&gt;%\n  st_cast(\"LINESTRING\") %&gt;%\n  st_cast(\"POINT\")\n\ndata(\"World\")\nworld &lt;- World %&gt;%\n  st_cast(\"POLYGON\") %&gt;%\n  st_transform(ortho_proj) %&gt;%\n  dplyr::filter(!(st_is_empty(geometry)))\n\ngraticule &lt;- get_graticule(centre = c(start_lon, start_lat)) %&gt;%\n  st_transform(ortho_proj)"
  },
  {
    "objectID": "maps/07-navigation.html#tmap",
    "href": "maps/07-navigation.html#tmap",
    "title": "07 Navigation",
    "section": "tmap",
    "text": "tmap\nAt time of writing there is a bug in tm_title so no title on this map. See this issue.\nNote that I hand made the graticule using code from a sourced R file which trims the graticule to only extend across the mapped area. Neither tmap nor ggplot2 successfully applied the graticule in this projection without errors using their native functionality.\n\ntm_shape(world) +\n  tm_fill(fill = \"#cccccc\", lwd = 0) +\n  tm_shape(graticule, is.main = TRUE) +\n  tm_lines(col = \"grey\", lwd = 0.5) +\n  tm_shape(lox_sf) +\n  tm_dots(fill = \"firebrick\", size = 0.001) +\n  tm_title(\"    Go west(ish) west! See also Day 22\") +\n  tm_layout(frame = FALSE)"
  },
  {
    "objectID": "maps/07-navigation.html#ggplot2",
    "href": "maps/07-navigation.html#ggplot2",
    "title": "07 Navigation",
    "section": "ggplot2",
    "text": "ggplot2\n\nggplot(world) +\n  geom_sf(fill = \"#cccccc\", linewidth = 0) +\n  geom_sf(data = graticule, colour = \"grey\", linewidth = 0.2) +\n  geom_sf(data = lox_sf, colour = \"firebrick\", size = 0.01) +\n  ggtitle(\"Go west(ish). See also Day 22\") +\n  theme_void()"
  },
  {
    "objectID": "maps/25-antarctica.html",
    "href": "maps/25-antarctica.html",
    "title": "25 Antarctica",
    "section": "",
    "text": "A cold continent that can’t be reached with Web Mercator."
  },
  {
    "objectID": "maps/25-antarctica.html#libraries",
    "href": "maps/25-antarctica.html#libraries",
    "title": "25 Antarctica",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "maps/25-antarctica.html#data-wrangling",
    "href": "maps/25-antarctica.html#data-wrangling",
    "title": "25 Antarctica",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nfocus &lt;- \"Antarctica\"\nlon0 &lt;- 0\nlat0 &lt;- -90\nproj &lt;- str_glue(\"+proj=ortho lon_0={lon0} lat_0={lat0}\")\n\n\n\n\nCode\nworld &lt;- st_read(\"data/world.gpkg\") %&gt;%\n  st_make_valid() %&gt;%\n  select(CONTINENT)\n\nworld_o &lt;- world %&gt;%\n  st_transform(proj) %&gt;%\n  st_make_valid() %&gt;%\n  filter(!st_is_empty(.)) %&gt;%\n  group_by(CONTINENT) %&gt;%\n  summarise() \n\ncontinent &lt;- world %&gt;%\n  filter(CONTINENT == focus)"
  },
  {
    "objectID": "maps/25-antarctica.html#tmap",
    "href": "maps/25-antarctica.html#tmap",
    "title": "25 Antarctica",
    "section": "tmap",
    "text": "tmap\n\ntm_shape(world_o) +\n  tm_fill() + \n  tm_shape(continent) +\n  tm_fill(fill = \"red\") +\n  tm_layout(frame = FALSE)"
  },
  {
    "objectID": "maps/25-antarctica.html#ggplot2",
    "href": "maps/25-antarctica.html#ggplot2",
    "title": "25 Antarctica",
    "section": "ggplot2",
    "text": "ggplot2\n\nggplot(world_o) +\n  geom_sf(linewidth = 0) +\n  geom_sf(\n    data = continent, \n    fill = \"red\", \n    linewidth = 0) +\n  theme_void()"
  },
  {
    "objectID": "maps/06-asia.html",
    "href": "maps/06-asia.html",
    "title": "06 Asia",
    "section": "",
    "text": "Code\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)\n\n\nLargest of the continents."
  },
  {
    "objectID": "maps/06-asia.html#libraries",
    "href": "maps/06-asia.html#libraries",
    "title": "06 Asia",
    "section": "",
    "text": "Code\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)\n\n\nLargest of the continents."
  },
  {
    "objectID": "maps/06-asia.html#data-wrangling",
    "href": "maps/06-asia.html#data-wrangling",
    "title": "06 Asia",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nfocus &lt;- \"Asia\"\nlon0 &lt;- 100\nlat0 &lt;- 45\nproj &lt;- str_glue(\"+proj=ortho lon_0={lon0} lat_0={lat0}\")\n\n\n\n\nCode\nworld &lt;- st_read(\"data/world.gpkg\") %&gt;%\n  st_make_valid() %&gt;%\n  select(CONTINENT)\n\nworld_o &lt;- world %&gt;%\n  st_transform(proj) %&gt;%\n  st_make_valid() %&gt;%\n  filter(!st_is_empty(.)) %&gt;%\n  group_by(CONTINENT) %&gt;%\n  summarise() \n\ncontinent &lt;- world %&gt;%\n  filter(CONTINENT == focus)"
  },
  {
    "objectID": "maps/06-asia.html#tmap",
    "href": "maps/06-asia.html#tmap",
    "title": "06 Asia",
    "section": "tmap",
    "text": "tmap\n\ntm_shape(world_o) +\n  tm_fill() + \n  tm_shape(continent) +\n  tm_fill(fill = \"red\") +\n  tm_layout(frame = FALSE)"
  },
  {
    "objectID": "maps/06-asia.html#ggplot2",
    "href": "maps/06-asia.html#ggplot2",
    "title": "06 Asia",
    "section": "ggplot2",
    "text": "ggplot2\n\nggplot(world_o) +\n  geom_sf(linewidth = 0) +\n  geom_sf(\n    data = continent, \n    fill = \"red\", \n    linewidth = 0) +\n  theme_void()"
  },
  {
    "objectID": "maps/12-south-america.html",
    "href": "maps/12-south-america.html",
    "title": "12 South America",
    "section": "",
    "text": "Southern part of the American continent."
  },
  {
    "objectID": "maps/12-south-america.html#libraries",
    "href": "maps/12-south-america.html#libraries",
    "title": "12 South America",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "maps/12-south-america.html#data-wrangling",
    "href": "maps/12-south-america.html#data-wrangling",
    "title": "12 South America",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nfocus &lt;- \"South America\"\nlon0 &lt;- -62\nlat0 &lt;- -21\nproj &lt;- str_glue(\"+proj=ortho lon_0={lon0} lat_0={lat0}\")\n\n\n\n\nCode\nworld &lt;- st_read(\"data/world.gpkg\") %&gt;%\n  st_make_valid() %&gt;%\n  select(CONTINENT)\n\nworld_o &lt;- world %&gt;%\n  st_transform(proj) %&gt;%\n  st_make_valid() %&gt;%\n  filter(!st_is_empty(.)) %&gt;%\n  group_by(CONTINENT) %&gt;%\n  summarise() \n\ncontinent &lt;- world %&gt;%\n  filter(CONTINENT == focus)"
  },
  {
    "objectID": "maps/12-south-america.html#tmap",
    "href": "maps/12-south-america.html#tmap",
    "title": "12 South America",
    "section": "tmap",
    "text": "tmap\n\ntm_shape(world_o) +\n  tm_fill() + \n  tm_shape(continent) +\n  tm_fill(fill = \"red\") +\n  tm_layout(frame = FALSE)"
  },
  {
    "objectID": "maps/12-south-america.html#ggplot2",
    "href": "maps/12-south-america.html#ggplot2",
    "title": "12 South America",
    "section": "ggplot2",
    "text": "ggplot2\n\nggplot(world_o) +\n  geom_sf(linewidth = 0) +\n  geom_sf(\n    data = continent, \n    fill = \"red\", \n    linewidth = 0) +\n  theme_void()"
  },
  {
    "objectID": "maps/16-oceania.html",
    "href": "maps/16-oceania.html",
    "title": "14 Oceania",
    "section": "",
    "text": "Region made up of thousands of islands throughout the Central and South Pacific."
  },
  {
    "objectID": "maps/16-oceania.html#libraries",
    "href": "maps/16-oceania.html#libraries",
    "title": "14 Oceania",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "maps/16-oceania.html#data-wrangling",
    "href": "maps/16-oceania.html#data-wrangling",
    "title": "14 Oceania",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nfocus &lt;- \"Oceania\"\nlon0 &lt;- 170\nlat0 &lt;- -10\nproj &lt;- str_glue(\"+proj=ortho lon_0={lon0} lat_0={lat0}\")\n\n\n\n\nCode\nworld &lt;- st_read(\"data/world.gpkg\") %&gt;%\n  st_make_valid() %&gt;%\n  select(CONTINENT)\n\nworld_o &lt;- world %&gt;%\n  st_transform(proj) %&gt;%\n  st_make_valid() %&gt;%\n  filter(!st_is_empty(.)) %&gt;%\n  group_by(CONTINENT) %&gt;%\n  summarise() \n\ncontinent &lt;- world %&gt;%\n  filter(CONTINENT == focus)"
  },
  {
    "objectID": "maps/16-oceania.html#tmap",
    "href": "maps/16-oceania.html#tmap",
    "title": "14 Oceania",
    "section": "tmap",
    "text": "tmap\n\ntm_shape(world_o) +\n  tm_fill() + \n  tm_shape(continent) +\n  tm_fill(fill = \"red\") +\n  tm_layout(frame = FALSE)"
  },
  {
    "objectID": "maps/16-oceania.html#ggplot2",
    "href": "maps/16-oceania.html#ggplot2",
    "title": "14 Oceania",
    "section": "ggplot2",
    "text": "ggplot2\n\nggplot(world_o) +\n  geom_sf(linewidth = 0) +\n  geom_sf(\n    data = continent, \n    fill = \"red\", \n    linewidth = 0) +\n  theme_void()"
  },
  {
    "objectID": "maps/02-lines.html",
    "href": "maps/02-lines.html",
    "title": "02 Lines",
    "section": "",
    "text": "A map with lines."
  },
  {
    "objectID": "maps/02-lines.html#libraries",
    "href": "maps/02-lines.html#libraries",
    "title": "02 Lines",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "maps/02-lines.html#data-wrangling",
    "href": "maps/02-lines.html#data-wrangling",
    "title": "02 Lines",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nnz &lt;- st_read(\"data/nz.gpkg\") %&gt;%\n  st_cast(\"MULTILINESTRING\") %&gt;%\n  mutate(What = \"Shore\",\n         What = as.factor(What))"
  },
  {
    "objectID": "maps/02-lines.html#tmap",
    "href": "maps/02-lines.html#tmap",
    "title": "02 Lines",
    "section": "tmap",
    "text": "tmap\nSome of this code is a workaround for an issue I reported.\n\ntm_shape(nz, bbox = nz %&gt;% st_union() %&gt;% st_buffer(500)) + \n  tm_lines(\n    col = \"blue\",\n    lwd = 0.5) + \n  tm_add_legend(\n    type = \"lines\",\n    col = c(\"blue\"),\n    labels = c(\"Shore\"),\n    title = \"What\") +\n  tm_layout(\n    frame = FALSE,\n    legend.frame = FALSE,\n    legend.outside = TRUE)"
  },
  {
    "objectID": "maps/02-lines.html#ggplot2",
    "href": "maps/02-lines.html#ggplot2",
    "title": "02 Lines",
    "section": "ggplot2",
    "text": "ggplot2\n\nggplot(nz) +\n  geom_sf(aes(colour = What), linewidth = 0.25) +\n  scale_colour_manual(values = c(\"blue\")) +\n  theme_void()"
  },
  {
    "objectID": "maps/04-bad-map.html",
    "href": "maps/04-bad-map.html",
    "title": "04 Bad Map",
    "section": "",
    "text": "Let’s get this over with."
  },
  {
    "objectID": "maps/04-bad-map.html#libraries",
    "href": "maps/04-bad-map.html#libraries",
    "title": "04 Bad Map",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "maps/04-bad-map.html#data-wrangling",
    "href": "maps/04-bad-map.html#data-wrangling",
    "title": "04 Bad Map",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nsh1 &lt;- st_read(\"data/sh1.gpkg\") %&gt;%\n  st_transform(4326) %&gt;%\n  select(geom) %&gt;%\n  mutate(Mode = \"Road\")\ninterislander &lt;- st_read(\"data/interislander.gpkg\") %&gt;%\n  st_transform(4326) %&gt;%\n  select(geom) %&gt;%\n  mutate(Mode = \"Boat\")\ncombined &lt;- sh1 %&gt;%\n  bind_rows(interislander) %&gt;%\n  mutate(Mode = as.factor(Mode))"
  },
  {
    "objectID": "maps/04-bad-map.html#tmap",
    "href": "maps/04-bad-map.html#tmap",
    "title": "04 Bad Map",
    "section": "tmap",
    "text": "tmap\n\ntm_shape(combined) +\n  tm_lines(\n    col = \"Mode\",\n    col.scale = tm_scale_categorical(\n      values = c(\"red\", \"blue\"),\n      levels = c(\"Road\", \"Boat\")),\n    lty = \"Mode\",\n    lty.scale = tm_scale_categorical(\n      values = c(\"solid\", \"dashed\"),\n      levels = c(\"Road\", \"Boat\")),\n    lty.legend = tm_legend_combine(\"col\"),\n    lwd = 0.5) +\n  tm_layout(\n    frame = FALSE,\n    legend.frame = FALSE,\n    legend.outside = TRUE) +\n  tm_compass()"
  },
  {
    "objectID": "maps/04-bad-map.html#ggplot2",
    "href": "maps/04-bad-map.html#ggplot2",
    "title": "04 Bad Map",
    "section": "ggplot2",
    "text": "ggplot2\nHere we need an additional package. ggspatial can do it and seems preferable to the not-very-configurable ggsn. The configurability of ggspatial seems a bit over the top for a simple map like this. On the other hand its default north arrow is very on brand for the themes “Bad Map”!\n\nlibrary(ggspatial)\n\nggplot(combined) +\n  geom_sf(aes(colour = Mode, linetype = Mode), linewidth = 0.2) +\n  scale_colour_manual(values = c(\"blue\", \"red\")) +\n  scale_linetype_manual(values = c(\"dotted\", \"solid\")) +\n  annotation_north_arrow(location = \"br\") + \n  theme_void()"
  },
  {
    "objectID": "maps/01-points.html",
    "href": "maps/01-points.html",
    "title": "01 Points",
    "section": "",
    "text": "A map with points.\nThe first three themes (points, lines, areas) all work with the same data. I’m making a meta-point about the somewhat arbitrary nature of geometries in spatial data (a polygon is after all conceputalised as a point set)."
  },
  {
    "objectID": "maps/01-points.html#libraries",
    "href": "maps/01-points.html#libraries",
    "title": "01 Points",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "maps/01-points.html#data-wrangling",
    "href": "maps/01-points.html#data-wrangling",
    "title": "01 Points",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nw &lt;- 500\n\nnz &lt;- st_read(\"data/nz.gpkg\") %&gt;%\n  mutate(Land = TRUE)\n\nbb &lt;- nz %&gt;% \n  st_bbox() %&gt;%\n  st_as_sfc() %&gt;%\n  st_as_sf(crs = st_crs(nz)) %&gt;%\n  st_buffer(w, nQuadSegs = 1) \n\nshore &lt;- nz %&gt;% \n  st_cast(\"MULTILINESTRING\") %&gt;%\n  st_cast(\"LINESTRING\") %&gt;%\n  st_buffer(w) %&gt;%\n  st_as_sfc() %&gt;%\n  st_as_sf(crs = st_crs(nz)) %&gt;%\n  mutate(Shore = TRUE)\n\nland &lt;- nz %&gt;%\n  st_union() %&gt;%\n  st_buffer(w)\n\nwater &lt;- bb %&gt;%\n  st_difference(land) %&gt;%\n  mutate(Water = TRUE)\n\npts &lt;- bb %&gt;%\n  st_sample(250000) %&gt;%\n  st_sf() %&gt;%\n  st_as_sf(crs = st_crs(nz)) %&gt;%\n  st_join(water) %&gt;%\n  st_join(nz) %&gt;%\n  st_join(shore) %&gt;%\n  mutate(Water = replace_na(Water, FALSE),\n         Land  = replace_na(Land, FALSE),\n         Shore = replace_na(Shore, FALSE),\n         What = NA) %&gt;%\n  slice(sample(1:n()))\n\npts[pts$Water, \"What\"] &lt;- \"Water\"\npts[pts$Land, \"What\"] &lt;- \"Land\"\npts[pts$Shore, \"What\"] &lt;- \"Shore\"\n\npts &lt;- pts %&gt;%\n  mutate(What = as.factor(What)) %&gt;%\n  filter(!is.na(What))"
  },
  {
    "objectID": "maps/01-points.html#tmap",
    "href": "maps/01-points.html#tmap",
    "title": "01 Points",
    "section": "tmap",
    "text": "tmap\n\ntm_shape(pts) + \n  tm_dots(\n    fill = \"What\",\n    fill.scale = tm_scale_categorical(\n      values = c(\"#33aa6660\", \"#0000ff60\", \"#bbddff60\"),\n      levels = c(\"Land\", \"Shore\", \"Water\")), \n    size = 0.05) +\n  tm_layout(\n    frame = FALSE,\n    legend.frame = FALSE,\n    legend.outside = TRUE)"
  },
  {
    "objectID": "maps/01-points.html#ggplot2",
    "href": "maps/01-points.html#ggplot2",
    "title": "01 Points",
    "section": "ggplot2",
    "text": "ggplot2\n\nggplot(pts) +\n  geom_sf(aes(colour = What), size = 0.025) +\n  scale_colour_manual(values = c(\"#33aa6660\", \"#0000ff60\", \"#bbddff60\")) + \n  theme_void()"
  },
  {
    "objectID": "maps/10-north-america.html",
    "href": "maps/10-north-america.html",
    "title": "10 North America",
    "section": "",
    "text": "Northern part of the American continent."
  },
  {
    "objectID": "maps/10-north-america.html#libraries",
    "href": "maps/10-north-america.html#libraries",
    "title": "10 North America",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "maps/10-north-america.html#data-wrangling",
    "href": "maps/10-north-america.html#data-wrangling",
    "title": "10 North America",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nfocus &lt;- \"North America\"\nlon0 &lt;- -105\nlat0 &lt;- 45\nproj &lt;- str_glue(\"+proj=ortho lon_0={lon0} lat_0={lat0}\")\n\n\n\n\nCode\nworld &lt;- st_read(\"data/world.gpkg\") %&gt;%\n  st_make_valid() %&gt;%\n  select(CONTINENT)\n\nworld_o &lt;- world %&gt;%\n  st_transform(proj) %&gt;%\n  st_make_valid() %&gt;%\n  filter(!st_is_empty(.)) %&gt;%\n  group_by(CONTINENT) %&gt;%\n  summarise() \n\ncontinent &lt;- world %&gt;%\n  filter(CONTINENT == focus)"
  },
  {
    "objectID": "maps/10-north-america.html#tmap",
    "href": "maps/10-north-america.html#tmap",
    "title": "10 North America",
    "section": "tmap",
    "text": "tmap\n\ntm_shape(world_o) +\n  tm_fill() + \n  tm_shape(continent) +\n  tm_fill(fill = \"red\") +\n  tm_layout(frame = FALSE)"
  },
  {
    "objectID": "maps/10-north-america.html#ggplot2",
    "href": "maps/10-north-america.html#ggplot2",
    "title": "10 North America",
    "section": "ggplot2",
    "text": "ggplot2\n\nggplot(world_o) +\n  geom_sf(linewidth = 0) +\n  geom_sf(\n    data = continent, \n    fill = \"red\", \n    linewidth = 0) +\n  theme_void()"
  },
  {
    "objectID": "maps/09-hexes.html",
    "href": "maps/09-hexes.html",
    "title": "09 Hexagons",
    "section": "",
    "text": "6 sides, 6 angles, and 6 vertices.\nWishing to use a static web basemap increased the degree of difficulty here.\nHaving said that, tmap’s built in tm_basemap() function seems promising and intuitive.\nA bit of hunting around suggests that the ggspatial package’s annotation_map_tile() function is the best for basemaps in ggplot2."
  },
  {
    "objectID": "maps/09-hexes.html#libraries",
    "href": "maps/09-hexes.html#libraries",
    "title": "09 Hexagons",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(dplyr)\nlibrary(h3forr)\nlibrary(tmap)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(stringr)"
  },
  {
    "objectID": "maps/09-hexes.html#data-wrangling",
    "href": "maps/09-hexes.html#data-wrangling",
    "title": "09 Hexagons",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nsquare &lt;- c(1.74e6 + 1e4 * c(0, 0, 1, 1, 0), \n            5.42e6 + 1e4 * c(0, 1, 1, 0, 0)) %&gt;%\n  matrix(ncol = 2) %&gt;%\n  list() %&gt;%\n  st_polygon() %&gt;%\n  st_sfc() %&gt;%\n  st_sf(crs = 2193) %&gt;%\n  st_transform(4326)\n\nget_hexes &lt;- function(poly, resolution, distance) {\n  poly %&gt;% \n    st_buffer(distance) %&gt;%\n    polyfill(res = resolution) %&gt;% \n    h3_to_geo_boundary() %&gt;% \n    geo_boundary_to_sf()\n}\n\nh3_5 &lt;- get_hexes(square, 5, 5000) %&gt;% \n  st_cast(\"LINESTRING\")\nh3_6 &lt;- get_hexes(square, 6, 2500) %&gt;% \n  st_cast(\"LINESTRING\")\nh3_7 &lt;- get_hexes(square, 7, 1500) %&gt;% \n  st_cast(\"LINESTRING\")\nh3_8 &lt;- get_hexes(square, 8, 1000) %&gt;% \n  st_cast(\"LINESTRING\")\nh3_9 &lt;- get_hexes(square, 9, 750) %&gt;% \n  st_cast(\"LINESTRING\")\nh3_10 &lt;- get_hexes(square, 10, 500) %&gt;% \n  st_cast(\"LINESTRING\")\n\nbb &lt;- h3_10 %&gt;% \n  st_union() %&gt;%\n  st_bbox()\n\ncredit &lt;- maptiles::get_credit(\"OpenStreetMap\")"
  },
  {
    "objectID": "maps/09-hexes.html#tmap",
    "href": "maps/09-hexes.html#tmap",
    "title": "09 Hexagons",
    "section": "tmap",
    "text": "tmap\ntmap v4 has a built-in web basemap function. The raster downscaling kicks in to make the image a bit unsatisfactory, but I assume that option will be tweakable in due course.\n\ntm_basemap(server = \"OpenStreetMap\", zoom = 12) +\n  tm_shape(h3_5) + \n  tm_lines(lwd = 3.5) +\n  tm_shape(h3_6) + \n  tm_lines(lwd = 2.5) +\n  tm_shape(h3_7) + \n  tm_lines(lwd = 1.5) +\n  tm_shape(h3_8) + \n  tm_lines(lwd = 1) +\n  tm_shape(h3_9) + \n  tm_lines(lwd = 0.7) +\n  tm_shape(h3_10, is.main = TRUE) + \n  tm_lines(lwd = 0.5) +\n  tm_credits(\n    credit,\n    position = tm_pos_out(pos.h = \"RIGHT\", pos.v = \"TOP\",\n                          cell.h = \"center\", cell.v = \"bottom\")) + \n  tm_layout(frame = FALSE)"
  },
  {
    "objectID": "maps/09-hexes.html#ggplot2",
    "href": "maps/09-hexes.html#ggplot2",
    "title": "09 Hexagons",
    "section": "ggplot2",
    "text": "ggplot2\nggspatial seems the best option for a static background basemap.\n\nlibrary(ggspatial)\n\nggplot(square, aes(colour = \"#00000000\")) +\n  annotation_map_tile(zoomin = 1) + \n  geom_sf(data = h3_5, linewidth = 1, colour = \"black\") +\n  geom_sf(data = h3_6, linewidth = 0.75, colour = \"black\") +\n  geom_sf(data = h3_7, linewidth = 0.6, colour = \"black\") +\n  geom_sf(data = h3_8, linewidth = 0.45, colour = \"black\") +\n  geom_sf(data = h3_9, linewidth = 0.35, colour = \"black\") +\n  geom_sf(data = h3_10, linewidth = 0.25, colour = \"black\") +\n  xlim(bb[1], bb[3]) +\n  ylim(bb[2], bb[4]) +\n  theme_void()"
  },
  {
    "objectID": "maps/08-africa.html",
    "href": "maps/08-africa.html",
    "title": "08 Africa",
    "section": "",
    "text": "Second-largest and second-most populous continent."
  },
  {
    "objectID": "maps/08-africa.html#libraries",
    "href": "maps/08-africa.html#libraries",
    "title": "08 Africa",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "maps/08-africa.html#data-wrangling",
    "href": "maps/08-africa.html#data-wrangling",
    "title": "08 Africa",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nfocus &lt;- \"Africa\"\nlon0 &lt;- 20\nlat0 &lt;- 0\nproj &lt;- str_glue(\"+proj=ortho lon_0={lon0} lat_0={lat0}\")\n\n\n\n\nCode\nworld &lt;- st_read(\"data/world.gpkg\") %&gt;%\n  st_make_valid() %&gt;%\n  select(CONTINENT)\n\nworld_o &lt;- world %&gt;%\n  st_transform(proj) %&gt;%\n  st_make_valid() %&gt;%\n  filter(!st_is_empty(.)) %&gt;%\n  group_by(CONTINENT) %&gt;%\n  summarise() \n\ncontinent &lt;- world %&gt;%\n  filter(CONTINENT == focus)"
  },
  {
    "objectID": "maps/08-africa.html#tmap",
    "href": "maps/08-africa.html#tmap",
    "title": "08 Africa",
    "section": "tmap",
    "text": "tmap\n\ntm_shape(world_o) +\n  tm_fill() + \n  tm_shape(continent) +\n  tm_fill(fill = \"red\") +\n  tm_layout(frame = FALSE)"
  },
  {
    "objectID": "maps/08-africa.html#ggplot2",
    "href": "maps/08-africa.html#ggplot2",
    "title": "08 Africa",
    "section": "ggplot2",
    "text": "ggplot2\n\nggplot(world_o) +\n  geom_sf(linewidth = 0) +\n  geom_sf(\n    data = continent, \n    fill = \"red\", \n    linewidth = 0) +\n  theme_void()"
  },
  {
    "objectID": "maps/14-europe.html",
    "href": "maps/14-europe.html",
    "title": "14 Europe",
    "section": "",
    "text": "The westernmost peninsulas of Eurasia."
  },
  {
    "objectID": "maps/14-europe.html#libraries",
    "href": "maps/14-europe.html#libraries",
    "title": "14 Europe",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "maps/14-europe.html#data-wrangling",
    "href": "maps/14-europe.html#data-wrangling",
    "title": "14 Europe",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nfocus &lt;- \"Europe\"\nlon0 &lt;- 30\nlat0 &lt;- 60\nproj &lt;- str_glue(\"+proj=ortho lon_0={lon0} lat_0={lat0}\")\n\n\n\n\nCode\nworld &lt;- st_read(\"data/world.gpkg\") %&gt;%\n  st_make_valid() %&gt;%\n  select(CONTINENT)\n\nworld_o &lt;- world %&gt;%\n  st_transform(proj) %&gt;%\n  st_make_valid() %&gt;%\n  filter(!st_is_empty(.)) %&gt;%\n  group_by(CONTINENT) %&gt;%\n  summarise() \n\ncontinent &lt;- world %&gt;%\n  filter(CONTINENT == focus)"
  },
  {
    "objectID": "maps/14-europe.html#tmap",
    "href": "maps/14-europe.html#tmap",
    "title": "14 Europe",
    "section": "tmap",
    "text": "tmap\n\ntm_shape(world_o) +\n  tm_fill() + \n  tm_shape(continent) +\n  tm_fill(fill = \"red\") +\n  tm_layout(frame = FALSE)"
  },
  {
    "objectID": "maps/14-europe.html#ggplot2",
    "href": "maps/14-europe.html#ggplot2",
    "title": "14 Europe",
    "section": "ggplot2",
    "text": "ggplot2\n\nggplot(world_o) +\n  geom_sf(linewidth = 0) +\n  geom_sf(\n    data = continent, \n    fill = \"red\", \n    linewidth = 0) +\n  theme_void()"
  },
  {
    "objectID": "maps/13-choropleth.html",
    "href": "maps/13-choropleth.html",
    "title": "13 Choropleth",
    "section": "",
    "text": "Classic thematic map: a choropleth.\nThis one is where tmap comes into its own, although v4 in increasing the available options requires more code to make the same map compared to v3. ggplot2 by contrast is allergic to making classic classified choropleth maps, so much so that it’s hard to imagine using it in any kind of introductory teaching setting."
  },
  {
    "objectID": "maps/13-choropleth.html#libraries",
    "href": "maps/13-choropleth.html#libraries",
    "title": "13 Choropleth",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "maps/13-choropleth.html#data-wrangling",
    "href": "maps/13-choropleth.html#data-wrangling",
    "title": "13 Choropleth",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nak &lt;- st_read(\"data/ak-demographics-2018.gpkg\") %&gt;% \n  slice(-1) # remove Gulf Islands"
  },
  {
    "objectID": "maps/13-choropleth.html#tmap",
    "href": "maps/13-choropleth.html#tmap",
    "title": "13 Choropleth",
    "section": "tmap",
    "text": "tmap\nThe idea behind the tmap v4 semantics makes complete sense, but it is quite verbose. The example below in v3 would be\ntm_shape(ak) +\n  tm_polygons(col = \"maori\", n = 9, palette = \"YlGnBu\", \n              style = \"quantile\", title = \"% Māori\")\nIt is nice to have the additional control that the separate specification of the .scale and .legend parameters provide, but the downside is a lot of additional typing. On the other, hand, if you like typing, take a look at what’s involved in making a similar map using ggplot2.\nSome of the additional difficulty here is choosing to use a ‘non-standard’, legend, but this still seems like quite a lot of code.\n\ntm_shape(ak) + \n  tm_polygons(\n    fill = \"maori\",\n    fill.scale = tm_scale_intervals(\n      n = 9, values = \"YlGnBu\", style = \"quantile\"),\n    fill.legend = tm_legend(\n      orientation = \"landscape\", title = \"% Māori\"),\n    col = \"grey\",\n    lwd = 0.35\n  ) +\n  tm_layout(\n    frame = FALSE, legend.outside = TRUE,\n    legend.outside.position = \"bottom\",\n    legend.frame = FALSE)\n\n\n\n\nVersion 3.x tmap would accomplish the same map (setting to one side the custome legend) with\ntm_shape(ak) +\n  tm_polygons(col = \"maori\", n = 9, palette = \"YlGnBu\", style = \"quantile\"\n              border.col = \"grey\", lwd = 0.35)\nI should note that at least for now this v3 code will be internally transformed to v4 code, and hence still directly useable.\nThe ‘embedded functions’ approach such as tm_scale_intervals seems like extra work. The change from palette to values is consistent with the visual variables concept, but I think you have to admit that it is likely to be less obvious to a beginner."
  },
  {
    "objectID": "maps/13-choropleth.html#ggplot2",
    "href": "maps/13-choropleth.html#ggplot2",
    "title": "13 Choropleth",
    "section": "ggplot2",
    "text": "ggplot2\nHere, we have to do all the classification work and use the scale_fill_fermenter() and function to get the same effect. We use classInt::classIntervals() to make breaks. Even then we have to make up the legend labels manually if we want to show ranges, not just the break values. Much as I uh… appreciate the quirkiness of R’s paste() function, I don’t relish explaining this to an introductory class!\nAn additional challenge caused by placing the legend below the map area is that we have to extend the plot area to accommodate it, using coord_sf(...ylim=...), but that’s a distraction it is the generation of breaks, and legend labels that is the real annoyance (at least to me).\n\nlibrary(classInt)\n\nclass_breaks &lt;- classIntervals(ak$maori, 9, \"quantile\", digits = 1)\nbrks &lt;- round(class_breaks$brks, 1)\nintervals = paste(brks[-10], rep(\" to \", 9), brks[-1])\nbb &lt;- st_bbox(ak)\n\nggplot(ak) + \n  geom_sf(aes(fill = maori), colour = \"grey\", linewidth = 0.2) +\n  scale_fill_fermenter(\n    palette = \"YlGnBu\",\n    direction = 1,\n    breaks = brks[-10],\n    labels = intervals,\n    name = \"% Māori\",\n    guide = guide_legend(\n      keywidth = unit(15, units = \"mm\"),\n      keyheight = unit(3, units = \"mm\"),\n      label.position = \"bottom\",\n      title.position = \"top\",\n      nrow = 1)) +\n  coord_sf(ylim = c(bb[2] - 10000, bb[4]), clip = \"off\") +\n  theme_void() +\n  theme(legend.position = c(0.5, 0.1))\n\n\n\n\nThe underlying issue here is that ggplot2 really doesn’t want to make classed choropleths. The data are ‘continuous’ valued and ggplot2’s strong preference is to associate a continuous variable with a continuous visual variable. You can see this if you let it do its own thing:\n\nggplot(ak) + \n  geom_sf(aes(fill = maori), colour = \"grey\", linewidth = 0.2) +\n  scale_fill_distiller(palette = \"YlGnBu\", direction = 1) +\n  theme_void()\n\n\n\n\nData values are mapped directly to positions on the colour ramp. Doing different things to this requires the kind of additional work we see above."
  },
  {
    "objectID": "maps/03-polygons.html",
    "href": "maps/03-polygons.html",
    "title": "03 Polygons",
    "section": "",
    "text": "A map with polygons."
  },
  {
    "objectID": "maps/03-polygons.html#libraries",
    "href": "maps/03-polygons.html#libraries",
    "title": "03 Polygons",
    "section": "Libraries",
    "text": "Libraries\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "maps/03-polygons.html#data-wrangling",
    "href": "maps/03-polygons.html#data-wrangling",
    "title": "03 Polygons",
    "section": "Data wrangling",
    "text": "Data wrangling\n\n\nCode\nnz &lt;- st_read(\"data/nz.gpkg\") %&gt;%\n  st_union() %&gt;%\n  st_as_sf() %&gt;%\n  mutate(What = \"Land\")\n\nnot_nz &lt;- nz %&gt;% \n  st_union() %&gt;%\n  st_buffer(500) %&gt;%\n  st_bbox() %&gt;%\n  st_as_sfc() %&gt;%\n  st_as_sf() %&gt;%\n  st_difference(nz) %&gt;%\n  mutate(What = \"Water\")\n\nnz_not_nz &lt;- nz %&gt;%\n  bind_rows(not_nz) %&gt;%\n  mutate(What = as.factor(What))"
  },
  {
    "objectID": "maps/03-polygons.html#tmap",
    "href": "maps/03-polygons.html#tmap",
    "title": "03 Polygons",
    "section": "tmap",
    "text": "tmap\n\ntm_shape(nz_not_nz) + \n  tm_fill(\n    fill = \"What\", \n    fill.scale = tm_scale_categorical(\n      values = c(\"#33aa66\", \"#bbddff\"),\n      levels = c(\"Land\", \"Water\"))) +\n  tm_layout(\n    frame = FALSE,\n    legend.frame = FALSE,\n    legend.outside = TRUE)"
  },
  {
    "objectID": "maps/03-polygons.html#ggplot2",
    "href": "maps/03-polygons.html#ggplot2",
    "title": "03 Polygons",
    "section": "ggplot2",
    "text": "ggplot2\n\nggplot(nz_not_nz) +\n  geom_sf(aes(fill = What), linewidth = 0) +\n  scale_fill_manual(values = c(\"#33aa66\", \"#bbddff\")) +\n  theme_void()"
  }
]