---
title: 13 Choropleth
# execute: 
#   cache: true
#   freeze: auto
knitr:
  opts_chunk: 
    warning: false
    message: false
---

Classic thematic map: a choropleth.

This one is where `tmap` comes into its own, although v4 in increasing the available options requires more code to make the same map compared to v3. `ggplot2` by contrast is allergic to making classic classified choropleth maps, so much so that it's hard to imagine using it in any kind of introductory teaching setting.

## Libraries
```{r}
#| results: false
#| code-fold: true
library(sf)
library(tmap)
library(dplyr)
library(ggplot2)
```

## Data wrangling
```{r}
#| results: false
#| code-fold: true
ak <- st_read("data/ak-demographics-2018.gpkg") %>% 
  slice(-1) # remove Gulf Islands
```

## `tmap`
The idea behind the `tmap` v4 semantics makes complete sense, but it is quite verbose. The example below in v3 would be

```
tm_shape(ak) +
  tm_polygons(col = "maori", n = 9, palette = "YlGnBu", 
              style = "quantile", title = "% Māori")
```

It is nice to have the additional control that the separate specification of the `.scale` and `.legend` parameters provide, but the downside is a lot of additional typing. On the other, hand, if you like typing, take a look at what's involved in making a similar map using `ggplot2`.

```{r}
tm_shape(ak) + 
  tm_polygons(
    fill = "maori",
    fill.scale = tm_scale_intervals(
      n = 9, values = "YlGnBu", 
      style = "quantile"),
    fill.legend = tm_legend(
      orientation = "landscape",
      title = "% Māori"),
    col = "grey",
    lwd = 0.35
  ) +
  tm_layout(
    frame = FALSE, legend.outside = TRUE,
    legend.outside.position = "bottom",
    legend.frame = FALSE)
```

## `ggplot2`
Here we have to do all the classification work and use the `scale_fill_fermenter()` function to get the same effect. We can use `classInt::classIntervals()` to do this. Even then we have to make up the legend labels manually. An added challenge caused by placing the legend below the map area is that we have to extend the plot area to accommodate it, using `coord_sf(...ylim=...)`.

```{r}
library(classInt)

intervals <- classIntervals(ak$maori, 9, "quantile", digits = 1)
brks <- round(intervals$brks, 1)
lbls = paste0(brks[-10], rep(" to ", 9), brks[-1])
bb <- st_bbox(ak)

ggplot(ak) + 
  geom_sf(aes(fill = maori), colour = "grey", linewidth = 0.2) +
  scale_fill_fermenter(
    palette = "YlGnBu",
    direction = 1,
    breaks = brks[-10],
    labels = lbls,
    name = "% Māori",
    guide = guide_legend(
      keywidth = unit(15, units = "mm"),
      keyheight = unit(3, units = "mm"),
      label.position = "bottom",
      title.position = "top",
      nrow = 1)) +
  coord_sf(ylim = c(bb[2] - 10000, bb[4]), clip = "off") +
  theme_void() +
  theme(legend.position = c(0.5, 0.1))

```
